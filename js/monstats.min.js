!function(){"use strict";angular.module("Monstats",["monstats.graph","monstats.services","monstats.utils"])}(),function(){"use strict";angular.module("monstats.graph",["monstats.services"])}(),function(){"use strict";angular.module("monstats.services",[])}(),function(){"use strict";function a(a,b){function c(){f()}function d(b){a.add(b),h.search=""}function e(b){a.del(b)}function f(a){function c(a){h.monsters=a.monsters,"cached"in a&&(h.cached=a.cached)}function d(a){h.error="Cannot load Monster DB :c"}h.cached=null,h.error=null,h.loading=!0;var e=a?b.forceLoad():b.load();e.then(c,d)["finally"](function(){h.loading=!1})}function g(){f(!0)}var h=this;h.cached=null,h.error=null,h.loading=!0,h.monsters=[],h.search="",h.selected=a.monsters,h.addMonster=d,h.delMonster=e,h.reload=g,c()}angular.module("Monstats").controller("AppController",a),a.$inject=["MonsterBox","MonsterDB"]}(),function(){"use strict";function a(){function a(a,b,c,d){"stat"in c&&d.setStat(c.stat),d.setupChart(b[0].children[0])}var b={restrict:"E",controller:c,controllerAs:"vm",bindToController:!0,template:'<div>  <div></div>  <serie ng-repeat="mon in vm.monsters" monster="mon" /></div>',scope:{monsters:"=",stat:"@"},replace:!0,link:a};return b}function b(){function a(a,b,c,d){d.addSerie(a.monster),a.$on("$destroy",function(){d.removeSerie(a.monster)})}var b={restrict:"E",require:"^monsterGraph",scope:{monster:"="},link:a};return b}function c(a){function b(b){var c=g.indexOf(b);if(!(c>=0)){g.push(b);var d={};d.id=b.id,d.name=b.name,d.data=a.computeGraph(b,h),i.addSeries(d)}}function c(a){var b=g.indexOf(a);b>=0&&g.splice(b,1);var c=i.get(a.id);c&&c.remove()}function d(b){a.isValidType(b)&&(h=b)}function e(a){for(var b=[],c=1;100>c;c++)b.push(""+c);i=new Highcharts.Chart({chart:{renderTo:a},title:{text:""},xAxis:{categories:b},yAxis:{title:{text:""}},plotOptions:{series:{marker:{enabled:!1}}},tooltip:{shared:!0},legend:{labelFormatter:function(){return this.name},layout:"vertical",itemMarginTop:1,itemMarginBottom:1,verticalAlign:"top"},credits:!1})}var f=this,g=[],h=a.types[0],i=null;f.addSerie=b,f.removeSerie=c,f.setStat=d,f.setupChart=e}angular.module("monstats.graph").directive("monsterGraph",a).directive("serie",b),c.$inject=["Growth"]}(),function(){"use strict";function a(){function a(a,b,c,d,e){var f=b+(c-b)*Math.pow((a-1)/(d-1),e);return Math.round(f)}function b(a){return d.indexOf(a)>=0}function c(c,d){if(!b(d))return console.log("Error: illegal stat type",d),[];for(var e=c.max_level,f=c[d+"_min"],g=c[d+"_max"],h=c[d+"_scale"],i=[],j=1;e+1>j;j++)i.push(a(j,f,g,e,h));return i}var d=["atk","hp","rcv"],e={types:d,isValidType:b,computeGraph:c};return e}angular.module("monstats.services").factory("Growth",a),a.$inject=[]}(),function(){"use strict";function a(){function a(a){c.indexOf(a)<0&&c.push(a)}function b(a){var b=c.indexOf(a);b>-1&&c.splice(b,1)}var c=[],d={monsters:c,add:a,del:b};return d}angular.module("monstats.services").factory("MonsterBox",a),a.$inject=[]}(),function(){"use strict";function a(a,b){function c(){try{return"localStorage"in window&&null!==window.localStorage}catch(a){return!1}}function d(a){if(c()){var b=Math.floor(Date.now()/1e3);localStorage.setItem("monsters",JSON.stringify(a)),localStorage.setItem("cachedOn",b)}}function e(){var b=a.defer();if(!c())return b.reject("HTML5 localstorage not supported"),b.promise;var d=localStorage.getItem("monsters"),e=localStorage.getItem("cachedOn");if(d&&e){var f={monsters:JSON.parse(d),cached:parseInt(e)};b.resolve(f)}else b.reject("Nothing in cache, yet");return b.promise}function f(){return b.get("data/monsters.min.json").success(function(a){d(a)}).then(function(a){return{monsters:a.data}})}function g(){function a(a){return a}function b(a){return f()}return e().then(a,b)}var h={load:g,forceLoad:f};return h}angular.module("monstats.services").factory("MonsterDB",a),a.$inject=["$q","$http"]}(),function(){"use strict";function a(){function a(a,b,c){angular.element(b).bind("click",function(a){a.preventDefault(),a.stopPropagation()})}return a}function b(){function a(a,b){return!a||!b||b.length<3?[]:a.filter(function(a){return a.name.toLowerCase().indexOf(b.toLowerCase())>-1})}return a}angular.module("monstats.utils",[]).directive("preventDefault",a).filter("byName",b)}();